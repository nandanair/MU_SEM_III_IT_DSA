#include<stdio.h>
#include<conio.h>
#define MAX 6
void BFS(int adj[][MAX],int visited[],int start)
{
 int queue[MAX],rear=-1,front=-1,i,k;
 queue[++rear]=start;
 visited[start]=1;
 while (rear!=front)
 {
 start=queue[++front];
 printf("\t%c",start+65);
 for(i=0;i<MAX;i++)
 {
 if(adj[start][i]==1&&visited[i]==0)
 {
 queue[++rear]=i;
 visited[i]=1;
 }
 }
 }
}
void DFS(int adj[][MAX],int visited[],int start)
{
int stack[MAX];
int top=-1,i;
 printf("\t%c",start+65);
 visited[start]=1;
stack[++top]=start;
while(top!=-1)
{
 start=stack[top];
 for(i=0;i<MAX;i++)
 {
 if(adj[start][i]==1&& visited[i]==0)
 {
 stack[++top]=i;
 printf("\t%c",i+65);
 visited[i]=1;
 break;
 }
 }
 if(i==MAX)
 top--;
}
}
int main()
{
int visited[MAX]={0};
int adj[MAX][MAX],i,j;
int opt,size;
do
{
 printf("\n##ENTER TYPE OF TRAVERSAL##");
 printf("\n1.BREADTH FIRST SEARCH(BFS)");
 printf("\n2.DEPTH FIRST SEARCH(DFS)");
 printf("\n3.EXIT");
 printf("\nENTER YOUR OPTION:");
 scanf("%d",&opt);
 switch(opt)
 {
 case 1:
 printf("\nEnter the adjacency matrix:\n");
 for(i=0;i<MAX;i++)
 {
 for(j=0;j<MAX;j++)
 scanf("%d",&adj[i][j]);
 }
 printf("\nBFS TRAVERSAL:");
 BFS(adj,visited,0);
 break;
 case 2:printf("\n Enter the adjacency matrix:\n");
 for(i=0;i<MAX;i++)
 {
 for(j=0;j<MAX;j++)
 scanf("%d",&adj[i][j]);
 }
 printf("\nDFS TRAVERSAL:");
 DFS(adj,visited,0);
 break;
 }
}while(opt!=3);
return 0;
}
