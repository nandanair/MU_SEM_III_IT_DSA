#include <stdio.h>
void merge(int a[],int low,int mid,int high)
{
 int i=low,j=mid+1,pos=low,temp[100],k;
 while((i<=mid)&& (j<=high))
 {
 if(a[i]<a[j])
 {
 temp[pos]=a[i];
 i++;
 }
 else
 {
 temp[pos]=a[j];
 j++;
 }
 pos++;
 }
 if(i>mid)
 {
 while(j<=high)
 {
 temp[pos]=a[j];
 j++;
 pos++;
 }
 }
 else
 {
 while(i<=mid)
 {
 temp[pos]=a[i];
 i++;
 pos++;
 }
 }
 for(k=low;k<pos;k++)
 {
 a[k]=temp[k];
 }
}
//MERGE SORT
void merge_sort(int a[],int low,int high)
{
 int mid;
 if(low<high)
 {
 mid=(low+high)/2;
 merge_sort(a,low,mid);
 merge_sort(a,mid+1,high);
 merge(a,low,mid,high);
 }
}
int partition(int a[],int low,int high)
{
 int left,right,temp,loc,flag;
 loc=left=low;
 right=high;
 flag=0;
 while(flag!=1)
 {
 while((a[loc]<=a[right])&& (loc!=right))
 {
 right--;
 }
 if(loc==right)
 {
 flag=1;
 }
 else if(a[loc]>a[right])
 {
 temp=a[loc];
 a[loc]=a[right];
 a[right]=temp;
 loc=right;
 }
 if(flag!=1)
 {
 while((a[loc]>=a[left])&& (loc!=left))
 left++;
 if(loc==left)
 flag=1;
 else if(a[loc]<a[left])
 {
 temp=a[loc];
 a[loc]=a[left];
 a[left]=temp;
 loc=left;
 }
 }
 }
 return loc;
}
//QUICK SORT
void quick_sort(int a[],int low,int high)
{
 int pos;
 if(low<high)
 {
 pos=partition(a,low,high);
 quick_sort(a,low,pos-1);
 quick_sort(a,pos+1,high);
 }
}
int main()
{
int opt,n,i,a[100];
do{
printf("\n\n##ENTER OPERATION TO BE PERFORMED##");
printf("\n1.CREATE AN ARRAY");
printf("\n2.SORTING USING MERGE SORT ");
printf("\n3.SORTING USING QUICK SORT ");
printf("\n4.EXIT");
printf("\n ENTER OPERATION NO:");
scanf("%d",&opt);
switch(opt)
{
 case 1:printf("\n enter number of elements in an array:");
 scanf("%d",&n);
 printf("\n enter the elements:\n");
 for(i=0;i<n;i++)
 {
 scanf("%d",&a[i]);
 }
 break;
 case 2:printf("\n before using merge sort:");
 for(i=0;i<n;i++)
 {
 printf("\t%d",a[i]);
 }
 merge_sort(a,0,n-1);
 printf("\n after using merge sort:");
 for(i=0;i<n;i++)
 {
 printf("\t%d",a[i]);
 }
 break;
 case 3:printf("\n before using quick sort:");
 for(i=0;i<n;i++)
 {
 printf("\t%d",a[i]);
 }
 quick_sort(a,0,n-1);
 printf("\n after using quick sort:");
 for(i=0;i<n;i++)
 {
 printf("\t%d",a[i]);
 }
 break;
 case 4:break;
}
}while(opt!=4);
return 0;
}
